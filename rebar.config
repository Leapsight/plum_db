{minimum_otp_vsn, "R24"}.
{erl_opts, [
    debug_info,
    warnings_as_errors,
    nowarn_deprecated_function,
    {platform_define, "^[0-9]+", namespaced_types}
]}.

{cover_enabled, true}.

{eunit_opts, [verbose, {report,{eunit_surefire,[{dir,"."}]}}]}.

{xref_checks, [undefined_function_calls]}.


{deps, [
    sext,
    gproc,
    recon,
    observer_cli,
    {partisan,
        {git, "http://github.com/lasp-lang/partisan.git", {tag, "v5.0.0-rc.5"}}
    },
    %% Leapsights
    {eleveldb,
        {git, "https://github.com/Leapsight/eleveldb.git", {tag, "leapsight-3.0.0"}}
    },
    {app_config,
        {git, "https://github.com/leapsight/app_config.git", {branch, "1.1.1"}}
    },
    {utils,
        {git, "https://github.com/leapsight/utils.git", {tag, "1.3.7"}}
    }
]}.


%% =============================================================================
%% RELX
%% =============================================================================


{relx, [
    {release, {plum_db, "1.0.9"}, [
        %% Erlang
        sasl,
        crypto,
        inets,
        tools,
        runtime_tools,
        os_mon,
        %%
        recon,
        observer_cli,
        observer,
        wx,
        eleveldb,
        sext,
        app_config,
        gproc,
        utils,
        {partisan, load},
        plum_db
    ]},
    {extended_start_script, true},
    {overlay, [
        {mkdir, "./log/sasl"},
        {mkdir, "./data"}
    ]}

]}.

%% =============================================================================
%%  REBAR
%% =============================================================================

{hex, [
    {doc, #{provider => ex_doc}}
]}.

{project_plugins, [
    rebar3_ex_doc,
    rebar3_hex,
    pc,
    {eqwalizer_rebar3,
      {
        git_subdir,
        "https://github.com/whatsapp/eqwalizer.git",
        {branch, "main"},
        "eqwalizer_rebar3"
      }
    }
]}.

{shell, [{config, "config/node1/sys.config"}, {apps, [plum_db]}]}.

{profiles, [
    {dev, [
        {relx, [
            {move, dev},
            {sys_config, "config/node1/sys.config"},
            {vm_args, "config/node1/vm.args"},
            {overlay, [
                %% {copy, "bin/env", "bin"},
                {mkdir, ".log/sasl"},
                {mkdir, "./data"}
            ]}
        ]}
    ]},
    {node1, [
        {deps, [
            recon,
            observer_cli
        ]},
        {relx, [
            {mode, prod},
            {src_tests, true},
            {sys_config, "./config/node1/sys.config"},
            {vm_args, "./config/node1/vm.args"},
            {overlay, [
                {mkdir, "./data"}
            ]}
        ]}
    ]},
    {node2, [
        {deps, [
            recon,
            observer_cli
        ]},
        {relx, [
            {mode, prod},
            {src_tests, true},
            {sys_config, "./config/node2/sys.config"},
            {vm_args, "./config/node2/vm.args"},
            {overlay, [
                {mkdir, "./data"}
            ]}
        ]}
    ]},
    {node3, [
        {deps, [
            recon,
            observer_cli
        ]},
        {relx, [
            {mode, prod},
            {src_tests, true},
            {sys_config, "./config/node3/sys.config"},
            {vm_args, "./config/node3/vm.args"},
            {overlay, [
                {mkdir, "./data"}
            ]}
        ]}
    ]},
    {lint,  [
        {plugins, [
            {rebar3_lint, {git, "https://github.com/project-fifo/rebar3_lint.git", {tag, "v0.1.9"}}}
        ]}
    ]},
    {test, [
        {plugins, [rebar3_proper]},
        {deps, [
            meck,
            {eqwalizer_support,
                {
                  git_subdir,
                  "https://github.com/whatsapp/eqwalizer.git",
                  {tag, "v0.17.16"},
                  "eqwalizer_support"
                }
            }
        ]},
        %% {project_app_dirs, [""]},
        {erl_opts, [debug_info, export_all]}
    ]}
]}.



%% =============================================================================
%% DOCS
%% =============================================================================

% {edoc_opts, [{preprocess, true}]}.

{ex_doc, [
    {source_url, <<"https://gitlab.com/leapsight/plum_db">>},
    {extras, [<<"README.md">>, <<"LICENSE">>]},
    {main, <<"plum_db">>}
]}.


%% =============================================================================
%% TESTING
%% =============================================================================

{cover_enabled, true}.
{cover_opts, [verbose]}.
{ct_opts, [
    {sys_config, "config/node1/sys.config"}
]}.



%% =============================================================================
%% CODE QUALITY
%% =============================================================================

{elvis,
 [#{dirs => ["apps/bondy/src"],
       filter => "*.erl",
       rules => [
                 %% {elvis_style, line_length,
                 %%  #{ignore => [],
                 %%    limit => 80,
                 %%    skip_comments => false}},
                 {elvis_style, no_tabs},
                 {elvis_style, no_trailing_whitespace},
                 {elvis_style, macro_names, #{ignore => []}},
                 %% {elvis_style, macro_module_names},
                 {elvis_style, operator_spaces, #{rules => [{right, ","},
                                                            {right, "++"},
                                                            {left, "++"}]}},
                 %% {elvis_style, nesting_level, #{level => 3}},
                 {elvis_style, god_modules,
                  #{limit => 25,
                    ignore => []}},
                 {elvis_style, no_if_expression},
                 %% {elvis_style, invalid_dynamic_call, #{ignore => []}},
                 {elvis_style, used_ignored_variable},
                 {elvis_style, no_behavior_info},
                 {
                   elvis_style,
                   module_naming_convention,
                   #{regex => "^[a-z]([a-z0-9]*_?)*(_SUITE)?$",
                     ignore => []}
                 },
                 {
                   elvis_style,
                   function_naming_convention,
                   #{regex => "^([a-z][a-z0-9]*_?)*$"}
                 },
                 {elvis_style, state_record_and_type},
                 {elvis_style, no_spec_with_records}
                 %% {elvis_style, dont_repeat_yourself, #{min_complexity => 10}}
                 %% {elvis_style, no_debug_call, #{ignore => []}}
                ]
      },
     #{dirs => ["."],
       filter => "Makefile",
       rules => [{elvis_project, no_deps_master_erlang_mk, #{ignore => []}},
                 {elvis_project, protocol_for_deps_erlang_mk, #{ignore => []}}]
      },
     #{dirs => ["."],
       filter => "rebar.config",
       rules => [{elvis_project, no_deps_master_rebar, #{ignore => []}},
                 {elvis_project, protocol_for_deps_rebar, #{ignore => []}}]
      }
    ]
}.
